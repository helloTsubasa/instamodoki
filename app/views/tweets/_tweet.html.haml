.contents
  .content
    .content__header
      .content__header__name
        = link_to user_path(tweet.user), class: "post-profile" do
          = image_tag avatar_url(tweet.user), class: "post-profile-icon"
        = link_to user_path(tweet.user), class: "post-user" do
          = tweet.user.name
      .content__header__menu
        .menu-text
          …
          %ul.tweet-menu
            %li.tweet-menu__list
              = link_to "▶︎詳細", tweet_path(tweet)
            - if tweet.user_id == current_user.id
              %li.tweet-menu__list
                = link_to "▶︎削除", tweet_path(tweet), method: :delete

    .content__image
      = image_tag tweet.photos.first.image.url(:medium), class: "post-img"
      
    .content__title
      %ul.content__title__icons
        %li.good-icon{id: "like-icon-tweet-#{tweet.id.to_s}"}
          - if tweet.liked_by(current_user).present?
            = link_to tweet_like_path(tweet.id, tweet.liked_by(current_user)), method: :DELETE, remote: true, class: "liked" do
              %i.far.fa-thumbs-up.fa-lg.good-btn
          - else
            = link_to tweet_likes_path(tweet), method: :POST, remote: true, class: "like" do
              %i.far.fa-thumbs-up.fa-lg.btn-icon
        %li.bad-icon{id: "dislike-icon-tweet-#{tweet.id.to_s}"}
          - if tweet.disliked_by(current_user).present?
            = link_to tweet_dislike_path(tweet.id, tweet.disliked_by(current_user)), method: :DELETE, remote: true, class: "disliked" do
              %i.far.fa-thumbs-down.fa-lg.bad-btn
          - else
            = link_to tweet_dislikes_path(tweet), method: :POST, remote: true, class: "dislike" do
              %i.far.fa-thumbs-down.fa-lg.btn-icon
        %li.comment-icon
          = link_to "/", class: "comment" do
            %i.far.fa-comment.fa-lg.comment-btn.btn-icon
      .content__title__times{id: "like-text-tweet-#{tweet.id.to_s}"}
        = render "like_text", { likes: tweet.likes }
      .content__title__times{id: "dislike-text-tweet-#{tweet.id.to_s}"}
        = render "dislike_text", { dislikes: tweet.dislikes }
      .content__title__main
        .content__title__main__user
          %span.tweet-user
            = tweet.user.name
          %span.tweet-text
            = tweet.text
        .comments{id: "comment-tweet-#{tweet.id.to_s}"}
          = render 'comment_list', { tweet: tweet }
        = link_to time_ago_in_words(tweet.created_at).upcase + "前", tweet_path(tweet), class: "tweet-time__link"
        .tweet-comment{id: "comment-form-tweet-#{tweet.id.to_s}"}
          = form_with model: [tweet, Comment.new], class: "tweet-comment__form" do |f|
            = f.hidden_field :user_id, value: current_user.id
            = f.hidden_field :tweet_id, value: tweet.id
            = f.text_field :comment, class: "comment-field", placeholder: "コメント ...", autocomplete: :off
            = f.submit "投稿する", class: "comment-submit"




